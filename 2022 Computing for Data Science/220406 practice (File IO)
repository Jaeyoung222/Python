#TextIO 형식을 불러옴
from typing import TextIO

#skip_header를 정의함. txt파일 앞의 header를 무시함.
def skip_header(input_file : TextIO) -> str :
    line = input_file.readline()
    while line.startswith("#") :
        line = input_file.readline()
    return line
    
#데이터 중에 hash 이후의 값들은 무시하는 pass_hash 함수를 정의함.
def pass_hash(input_line : list) -> list :
    for i in range(len(input_line)) :
        if input_line[i].startswith("#") :
            input_line = input_line[:i]
            break
    return input_line

#데이터 뒤에 붙어있는 dot을 제거하고 각 item을 정수로 반환하는 remove_dot 함수를 정의함.
def remove_dot(input_list : list) -> list :
    removed = []
    for i in input_list :
        if i[-1] == "." :
            removed.append(int(i[:-1]))
    return removed

#input_file에 대해서 integer data만 sorting하는 process_file 함수를 정의함.
def process_file(input_file : TextIO) -> list :
    line = input_file.readline()
    line = skip_header(input_file)
    values = []
    numbers = []
    while line :
        line = line.strip()
        values = line.split()
        values = pass_hash(values)
        numbers += values
        line = input_file.readline()
    ans = remove_dot(numbers)
    return ans

with open("file_practice.txt", "r") as practice :
    print(max(process_file(practice)))

#참고 데이터
#Annual Number of Lynx Trapped, MacKenzie River, 1821-1934
#Original Source: Elton, C. and Nicholson, M. (1942)
#"The ten year cycle in numbers of Canadian lynx",
#J. Animal Ecology, Vol. 11, 215--244.
#This is the famous data set which has been listed before in
#various publications:
#Cambell, M.J. and Walker, A.M. (1977) "A survey of statistical work on
#the MacKenzie River series of annual Canadian lynx trappings for the years
#1821-1934 with a new analysis", J.Roy.Statistical Soc. A 140, 432--436.

#  269.  321.  585.  871. 1475. 2821. 3928. # 5943. 4950. 2577.  523.   98.  These numbers are not valid
#  184.  279.  409. 2285. 2685. 3409. 1824.  409.  151.   45.   68.  213.        
#  546. 1033. 2129. 2536.  957.  361.  377.  225.  360.  731. 1638. 2725.        
# 2871. 2119.  684.  299.  236.  245.  552. 1623. 3311. 6721. 4245.  687.        
#### This is a break line
#  255.  473.  358.  784. 1594. 1676. 2251. 1426.  756.  299.  201.  229.        
#  469.  736. 2042. 2811. 4431. 2511.  389. 73.   39.   49.   59.  188. 
#  377. 1292. 4031. 3495.  587.  105.  153.  387.  758. 1307. # 3465. 6991. These numbers are not valid       
# 6313. 3794. 1836.  345.  382.  808. 1388. 2713. 3800. 3091. 2985. 3790.        
#  674.   81.   80.  108.  229.  399. 1132. 2432. 3574. 2935. 1537.  529.        
#  485.  662. 1000. 1590. 2657. 3396.    

# 모범답안
from typing import TextIO

def process_file(input_file : TextIO) -> int :
    #initialization
    ans = 0
    
    #Process each line
    for line in input_file :
        # 1) Skip header
        if line.startswith("#") :
            continue
        
        # 2) Break a line string into valid number strings
        # 2-1) Take the string before "#" and remove whitespace
        #      Now the string has only valid numbers
        valid_line_str = line.split("#")[0].strip()
        
        # 2-2) Break the valid string into number strings
        #      (the last element will be empty "")
        valid_nums_str = valid_line_str.split(".")
        
        # 3) Process each number string and get the answer
        for num_str in valid_nums_str :
            # 3-1) Check if num_str is not empty
            if num_str :
                # 3-2) remove whitespace and change the type to int
                num = int(num_str.strip())
                # 3-3) Update answer
                if num > ans :
                    ans = num
    return ans

with open("file_practice.txt", "r") as input_file :
    ans = process_file(input_file)
    print(ans)
